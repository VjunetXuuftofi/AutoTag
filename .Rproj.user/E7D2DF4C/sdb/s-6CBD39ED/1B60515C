{
    "contents" : "library(dplyr)\n\nchange = function(label) {\n  return (paste(\"a\", label))\n}\n\ntest = function(data){\n  \n  if (mean(data$TRUE.) >= 0.99)\n  {\n    return(data)\n  }\n  \n  data <- group_by(data, Activity)\n  summarized <- summarise(data, mean = mean(TRUE.), n = n())\n  colnames(summarized) <- c(\"Variable\", \"mean\", \"n\")\n  summarized$Variable <- as.character(unlist(lapply(summarized$Variable, change)))\n  \n  data <- ungroup(data)\n  data <- group_by(data, Country)\n  summary2 <- summarise(data, mean = mean(TRUE.), n = n())\n  colnames(summary2) <- c(\"Variable\", \"mean\", \"n\")\n  rbind(summarized, summary2)\n  data <- ungroup(data)\n  \n  data <- ungroup(data)\n  data <- group_by(data, Sector)\n  summary2 <- summarise(data, mean = mean(TRUE.), n = n())\n  colnames(summary2) <- c(\"Variable\", \"mean\", \"n\")\n  summarized <- rbind(summarized, summary2)\n  \n  data <- ungroup(data)\n  data <- group_by(data, PartnerName)\n  summary2 <- summarise(data, mean = mean(TRUE.), n = n())\n  colnames(summary2) <- c(\"Variable\", \"mean\", \"n\")\n  summarized <- rbind(summarized, summary2)\n  \n  data <- ungroup(data)\n  data <- group_by(data, husband)\n  summary2 <- summarise(data, mean = mean(TRUE.), n = n())\n  colnames(summary2) <- c(\"Variable\", \"mean\", \"n\")\n  summarized <- rbind(summarized, summary2)\n  \n  data <- ungroup(data)\n  summarized <- summarized[with(summarized, order(mean, -n)), ]\n  \n  #forbiddenpartners = c('Cooperativa de Ahorro y Credito Mujeres Unidas (CACMU)',\n  #                      'Hekima, a partner of World Relief',\n  #                      'Urwego Opportunity Bank, a partner of Opportunity International and HOPE International',\n  #                      'Partners in Health', 'Kashf Foundation', 'ID Ghana',\n  #                      'Paglaum Multi-Purpose Cooperative (PMPC)',\n  #                      'CAURIE Microfinance, a partner of Catholic Relief Services',\n  #                      'Ibdaa Microfinance SAL', 'ADIM', 'Fundacion Paraguaya',\n  #                     'CIDRE', 'MiCredito', 'National Microfinance Bank')\n  #forbiddenactivities = c('Milk Sales', 'Motorcycle Transport', 'Home Energy',\n  #                        'Used Shoes', 'Hardware', 'Property', 'Services', 'Bakery',\n  #                        'Dairy', 'Poultry', 'Clothing')\n  #for (a in 1:1000) {\n  toremove <- as.character(summarized[1,1])\n  #if (!(toremove %in% forbiddenpartners | toremove %in% forbiddenactivities))\n  #{\n  #  break\n  #}\n  #}\n  print(toremove)\n  if (substring(toremove, 1, 1) == \"a\") {\n    data <- subset(data, Activity != substring(toremove, 3))\n  }\n  else {\n    data <- subset(data, Sector != toremove & Country != toremove & PartnerName != toremove & husband != toremove)\n  }\n  return (test(data))\n}\n\nextract = function (id) {\n  legit <- c(998356, 998232, 998956, 997331, 996748, 997022, 996082, 999124, 995455, 993810, 993764, 993757, 992994, 993970, 996544, 992516, 992370, 992527, 991868, 993052, 991940, 989604, 990094, 987764, 989302, 988753, 988792, 988407, 987774, 988634, 998356, 996748, 997022, 993764, 992994, 993970, 996544,\n             100151, 100005, 998432, 999125, 994989, 995340, 994175, 994610, 991313, 988695, 99207, 1000059,\n             1001490, 998506, 999002, 999137, 995920, 995844, 991521, 992822, 992920, 999207, 997118, 997211, 997125)\n  if (id %in% legit){\n    return (\"F\")\n  }\n  else{\n    return (\"T\")\n  }\n}\n\ndata <- read.csv(\"output.csv\")\ndata <- test(data)\nmean(data$TRUE.)\nwrite.csv(subsetted, file = \"changed.csv\")\nsubsetted <- subset(data, TRUE. == 0)\nsubsetted$checked <- as.vector(unlist(lapply(subsetted$Loan.ID, extract)))\nwrite.csv(data, \"newdata.csv\")\n",
    "created" : 1451519952731.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2737164345",
    "id" : "1B60515C",
    "lastKnownWriteTime" : 7234314197507506176,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}